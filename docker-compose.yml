services:
    db:
        image: postgres:latest # Usando la imagen oficial de PostgreSQL
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        ports:
            - "5433:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
            - ./sql:/docker-entrypoint-initdb.d

    backend:
        build: ./backend
        depends_on:
            - db
        ports:
            - "3000:3000"
        environment:
            DATABASE_URL: ${DATABASE_URL}

    nginx:
        image: nginx:latest
        volumes:
            - ./src:/usr/share/nginx/html
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
        ports:
            - "80:80"
        depends_on:
            - backend

    prometheus:
        image: prom/prometheus:latest
        container_name: prometheus
        volumes:
            - ./prometheus.yml:/etc/prometheus/prometheus.yml
        ports:
            - "9090:9090"

    grafana:
        image: grafana/grafana:latest
        container_name: grafana
        ports:
            - "3001:3000"
        volumes:
            - grafana_data:/var/lib/grafana
        environment:
            GF_SECURITY_ADMIN_USER: admin
            GF_SECURITY_ADMIN_PASSWORD: admin
            GF_SERVER_DOMAIN: localhost

    cadvisor:
        image: gcr.io/cadvisor/cadvisor:latest
        container_name: cadvisor
        ports:
            - "8080:8080"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - /sys:/sys
            - /var/lib/docker/:/var/lib/docker/

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0
        container_name: elasticsearch
        environment:
            - discovery.type=single-node
        ports:
            - "9200:9200"
            - "9300:9300"

    logstash:
        image: docker.elastic.co/logstash/logstash:8.10.0
        container_name: logstash
        ports:
            - "5044:5044"
        volumes:
            - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf

    kibana:
        image: docker.elastic.co/kibana/kibana:8.10.1
        container_name: kibana
        ports:
            - "5601:5601"
        environment:
            - ELASTICSEARCH_HOSTS=http://elasticsearch:9200

volumes:
    postgres_data:
    grafana_data:
